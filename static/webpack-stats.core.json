{
  "errors": [],
  "warnings": [],
  "version": "4.25.1",
  "hash": "3c1588f73513c8ba1744",
  "time": 164,
  "builtAt": 1541720256397,
  "publicPath": "",
  "outputPath": "/Users/billymoon/projects/fiona",
  "assetsByChunkName": {
    "main": "fiona.core.min.js"
  },
  "assets": [
    {
      "name": "fiona.core.min.js",
      "size": 5782,
      "chunks": [
        0
      ],
      "chunkNames": [
        "main"
      ],
      "emitted": true
    }
  ],
  "filteredAssets": 0,
  "entrypoints": {
    "main": {
      "chunks": [
        0
      ],
      "assets": [
        "fiona.core.min.js"
      ],
      "children": {},
      "childAssets": {}
    }
  },
  "namedChunkGroups": {
    "main": {
      "chunks": [
        0
      ],
      "assets": [
        "fiona.core.min.js"
      ],
      "children": {},
      "childAssets": {}
    }
  },
  "chunks": [
    {
      "id": 0,
      "rendered": true,
      "initial": true,
      "entry": true,
      "size": 12336,
      "names": [
        "main"
      ],
      "files": [
        "fiona.core.min.js"
      ],
      "hash": "32045a2583c0c5b593ac",
      "siblings": [],
      "parents": [],
      "children": [],
      "childrenByOrder": {},
      "modules": [
        {
          "id": 0,
          "identifier": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
          "name": "./src/core/recurse/index.js",
          "index": 14,
          "index2": 11,
          "size": 1976,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
          "issuerId": 14,
          "issuerName": "./src/core/primitives/object/object.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            },
            {
              "id": 14,
              "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
              "name": "./src/core/primitives/object/object.js",
              "profile": {
                "factory": 23,
                "building": 6,
                "dependencies": 13
              }
            }
          ],
          "profile": {
            "factory": 16,
            "building": 7,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 14,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
              "module": "./src/core/primitives/object/object.js",
              "moduleName": "./src/core/primitives/object/object.js",
              "type": "cjs require",
              "userRequest": "../../recurse",
              "loc": "1:20-44"
            },
            {
              "moduleId": 17,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/primitives/array/array.js",
              "module": "./src/core/primitives/array/array.js",
              "moduleName": "./src/core/primitives/array/array.js",
              "type": "cjs require",
              "userRequest": "../../recurse",
              "loc": "1:20-44"
            },
            {
              "moduleId": 18,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/primitives/string/string.js",
              "module": "./src/core/primitives/string/string.js",
              "moduleName": "./src/core/primitives/string/string.js",
              "type": "cjs require",
              "userRequest": "../../recurse",
              "loc": "2:20-44"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "const RecurseArguments = require('./arguments')\nconst { Register, registered } = require('../register')\n\n// TODO: can the recursor be simplified, or at least variables names made more clear?\nconst recurseObject = (seeded, original, position, current) => {\n  Object.keys(current).forEach(key => {\n    const nextPosition = `${position}.${key}`\n    current[key] = recurseData(seeded, original, nextPosition, current[key])\n  })\n  return current\n}\n\nconst recurseArray = (seeded, original, position, current) => {\n  return current.map((item, index) => {\n    const nextPosition = `${position}[${index}]`\n    return item === undefined ? undefined : recurseData(seeded, original, nextPosition, item, index)\n  })\n}\n\nconst recurseFunction = (seeded, original, position, current) => {\n  const recurseSeeded = RecurseArguments(seeded, position)\n  // TODO: if we are adding data property, why not also position property?\n  // TODO: perhaps data (property on seeded instance during recursion) should be called root, and be a getter/setter and cleaned up after recursion?\n  recurseSeeded.data = original\n  const argOrNo = registered.indexOf(current) !== -1 ? undefined : recurseSeeded\n  return recurseData(seeded, original, position, current(argOrNo))\n}\n\nconst recurseData = (seeded, original, position = 'root', current) => {\n  if (current === undefined && position === 'root') {\n    current = original\n  }\n\n  if (typeof current === 'object' && current.constructor === Object) {\n    return recurseObject(seeded, original, position, current)\n  } else if (typeof current === 'object' && current.constructor === Array) {\n    return recurseArray(seeded, original, position, current)\n  } else if (typeof current === 'function') {\n    return recurseFunction(seeded, original, position, current)\n  } else if (typeof current === 'object' && current.constructor === RegExp) {\n    return seeded.regex ? seeded.regex(current) : current\n  } else {\n    return current\n  }\n}\n\nmodule.exports = recurseData\n"
        },
        {
          "id": 1,
          "identifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
          "name": "./src/core/register/index.js",
          "index": 4,
          "index2": 3,
          "size": 128,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
              "module": "./src/core/recurse/index.js",
              "moduleName": "./src/core/recurse/index.js",
              "type": "cjs require",
              "userRequest": "../register",
              "loc": "2:33-55"
            },
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "./register",
              "loc": "2:33-54"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "const Register = require('./register')\nconst registered = require('./registered')\n\nmodule.exports = {\n  Register,\n  registered\n}"
        },
        {
          "id": 2,
          "identifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "name": "./src/core/prng/index.js",
          "index": 7,
          "index2": 7,
          "size": 1441,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "./prng",
              "loc": "3:13-30"
            },
            {
              "moduleId": 15,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/recurse/arguments.js",
              "module": "./src/core/recurse/arguments.js",
              "moduleName": "./src/core/recurse/arguments.js",
              "type": "cjs require",
              "userRequest": "../prng",
              "loc": "1:13-31"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// TODO: add a Mersenne Twister for comparison, and benchmark \nconst xor = require('./xor')\nconst processSeed = require('../process-seed')\nconst Distribution = require('../distribution')\n\n// TODO: add specific tests for prng wrapper\nmodule.exports = (seeded, initseed) => {\n  // initialise prng functions\n  const { reseed, getState, setState, random: prngRandom } = xor(0)\n\n  // seed prng with initial seed\n  reseed(processSeed(initseed))\n\n  // capture initial prng state\n  const initialState = getState()\n\n  // TODO: should be normalized to serialised string for portability?\n  // define prng state getter/setter method\n  const state = newVal => {\n    // if called with no arguments, return state\n    // else if called with null, reset state and return seeded instance\n    // else if called with value, set state to value and return seeded instance\n    if (newVal === undefined) {\n      return getState()\n    } else {\n      if (newVal === null) {\n        setState(initialState)\n      } else {\n        setState(newVal)\n      }\n      return seeded\n    }\n  }\n\n  const distribution = Distribution(seeded)\n\n  // define prng reset method\n  const reset = seed => {\n    reseed(processSeed(seed !== undefined ? seed : initseed))\n    return seeded\n  }\n\n  // define random method based on distribution weighted prng random function\n  const random = () => distribution(prngRandom())\n\n  return {\n    state,\n    reset,\n    random,\n    distribution\n  }\n}\n"
        },
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "index": 0,
          "index2": 18,
          "size": 28,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "profile": {
            "factory": 0,
            "building": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "multi entry"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 0
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "index": 1,
          "index2": 17,
          "size": 40,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "multi ./core/index.js",
          "issuerId": 3,
          "issuerName": "multi ./core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            }
          ],
          "profile": {
            "factory": 27,
            "building": 9
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 3,
              "moduleIdentifier": "multi ./core/index.js",
              "module": "multi ./core/index.js",
              "moduleName": "multi ./core/index.js",
              "type": "single entry",
              "userRequest": "./core/index.js",
              "loc": "main[0]"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 1,
          "source": "module.exports = require('../src/core')\n"
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "index": 2,
          "index2": 16,
          "size": 1696,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/core/index.js",
          "issuerId": 4,
          "issuerName": "./core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            }
          ],
          "profile": {
            "factory": 5,
            "building": 5
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 4,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/core/index.js",
              "module": "./core/index.js",
              "moduleName": "./core/index.js",
              "type": "cjs require",
              "userRequest": "../src/core",
              "loc": "1:17-39"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 2,
          "source": "const packageJson = require('../../package')\nconst { Register, registered } = require('./register')\nconst Prng = require('./prng')\nconst Moon = require('./moon')\nconst number = require('./primitives/number/number')\nconst object = require('./primitives/object/object')\nconst json = require('./primitives/json/json')\nconst array = require('./primitives/array/array')\nconst string = require('./primitives/string/string')\n\nconst fiona = seed => new Moon(seed, Prng)\n\nfiona.version = packageJson.version\n\n// TODO: would it be simpler to pull the Register factory into core index?\nconst registerFactory = (name, fn) => {\n  const fnProxy = (...args) => fn(...args)\n  // TODO: handle duplicate extension registrations\n  registered.push(fnProxy)\n  return (fiona[name] = fnProxy)\n}\n\nconst registerMethod = (name, fn) => {\n  return (Moon.prototype[name] = fn)\n}\n\n// TODO: should it be possible to register extensions local to seeded instance?\n// perhaps something like:\n//     const personExtension = seeded => ({\n//       gender: fiona.Gender,\n//       name: ({ data }) => seeded.fullname({ gender: data.gender })\n//     })\n//     fiona().register(['person', personExtension]).object(() => fiona.Person, { luckyNumber: fiona.Number({ max: 100 }) })\nfiona.register = Register(registerFactory, registerMethod)\n\n// TODO: register Random on seeded instance, perhaps need to implement seeded.register first\nfiona.Random = () => seeded => seeded.random()\n\nconst clone = seeded => fiona(seeded.info().initseed).state(seeded.state())\n\nfiona.register(['clone', clone])\n\nfiona.register(\n  ['number', number],\n  ['object', object],\n  ['json', json],\n  ['string', string],\n  ['array', array]\n)\n\nmodule.exports = fiona\n"
        },
        {
          "id": 6,
          "identifier": "/Users/billymoon/projects/fiona/package.json",
          "name": "./package.json",
          "index": 3,
          "index2": 0,
          "size": 1821,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "../../package",
              "loc": "1:20-44"
            }
          ],
          "usedExports": true,
          "providedExports": [
            "name",
            "version",
            "description",
            "repository",
            "main",
            "scripts",
            "author",
            "license",
            "devDependencies",
            "jest",
            "dependencies",
            "size-limit",
            "default"
          ],
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "{\n  \"name\": \"fiona\",\n  \"version\": \"2.7.0\",\n  \"description\": \"tiny yet powerful pseudo random data generator\",\n  \"repository\": \"billymoon/fiona\",\n  \"main\": \"fiona.min.js\",\n  \"scripts\": {\n    \"start\": \"next start\",\n    \"dev\": \"next dev\",\n    \"test\": \"jest\",\n    \"size-limit\": \"size-limit\",\n    \"build\": \"taskr build\",\n    \"deploy\": \"taskr deploy\",\n    \"fix\": \"taskr fix\",\n    \"git-pre-commit\": \"taskr precommit\",\n    \"git-post-commit\": \"taskr postcommit\",\n    \"git-post-merge\": \"taskr postcommit\"\n  },\n  \"author\": \"Billy Moon\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"@taskr/clear\": \"^1.1.0\",\n    \"@taskr/esnext\": \"^1.1.0\",\n    \"@weco/next-plugin-transpile-modules\": \"0.0.2\",\n    \"@zeit/git-hooks\": \"^0.1.4\",\n    \"bezier-easing\": \"^2.0.3\",\n    \"fetch-pretender\": \"^1.5.0\",\n    \"git-tools\": \"^0.3.0\",\n    \"jest\": \"^22.4.4\",\n    \"jsx-components\": \"1.2.0\",\n    \"lodash.template\": \"^4.4.0\",\n    \"next\": \"^6.1.1\",\n    \"randexp\": \"^0.4.6\",\n    \"react\": \"^16.4.1\",\n    \"react-dom\": \"^16.0.0\",\n    \"react-redux\": \"^5.1.0\",\n    \"redux\": \"^4.0.1\",\n    \"size-limit\": \"^0.21.0\",\n    \"standard\": \"^11.0.1\",\n    \"taskr\": \"^1.1.0\",\n    \"webpack\": \"^4.25.1\",\n    \"webpack-bundle-analyzer\": \"^3.0.3\",\n    \"webpack-cli\": \"^3.1.2\"\n  },\n  \"jest\": {\n    \"testURL\": \"http://localhost/\",\n    \"collectCoverageFrom\": [\n      \"src/**/*.js\",\n      \"!src/**/*.docs.js\",\n      \"!src/docs/**\"\n    ],\n    \"testPathIgnorePatterns\": [\n      \"node_modules\",\n      \"misc\"\n    ]\n  },\n  \"dependencies\": {\n    \"react-highlight\": \"^0.12.0\"\n  },\n  \"size-limit\": [\n    {\n      \"config\": \"webpack.config.core.js\",\n      \"limit\": \"5 KB\"\n    },\n    {\n      \"config\": \"webpack.config.js\",\n      \"limit\": \"20 KB\"\n    },\n    {\n      \"path\": \"fiona.min.js\",\n      \"limit\": \"10 KB\"\n    },\n    {\n      \"path\": \"fiona.core.min.js\",\n      \"limit\": \"2 KB\"\n    }\n  ]\n}\n"
        },
        {
          "id": 7,
          "identifier": "/Users/billymoon/projects/fiona/src/core/register/register.js",
          "name": "./src/core/register/register.js",
          "index": 5,
          "index2": 1,
          "size": 392,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/register/index.js",
          "issuerId": 1,
          "issuerName": "./src/core/register/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            },
            {
              "id": 1,
              "identifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
              "name": "./src/core/register/index.js",
              "profile": {
                "factory": 23,
                "building": 6,
                "dependencies": 13
              }
            }
          ],
          "profile": {
            "factory": 8,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
              "module": "./src/core/register/index.js",
              "moduleName": "./src/core/register/index.js",
              "type": "cjs require",
              "userRequest": "./register",
              "loc": "1:17-38"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "const Register = (registerFactory, registerMethod) => (...extensions) => extensions.forEach(plugin => {\n  const [name, fn] = typeof plugin === 'function' ? [plugin.name, plugin] : plugin\n\n  registerFactory(name[0].toUpperCase() + name.slice(1), (...args) => seeded => fn(seeded, ...args))\n\n  registerMethod(name, function (...args) { return fn(this, ...args) })\n})\n\nmodule.exports = Register\n"
        },
        {
          "id": 8,
          "identifier": "/Users/billymoon/projects/fiona/src/core/register/registered.js",
          "name": "./src/core/register/registered.js",
          "index": 6,
          "index2": 2,
          "size": 132,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/register/index.js",
          "issuerId": 1,
          "issuerName": "./src/core/register/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            },
            {
              "id": 1,
              "identifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
              "name": "./src/core/register/index.js",
              "profile": {
                "factory": 23,
                "building": 6,
                "dependencies": 13
              }
            }
          ],
          "profile": {
            "factory": 8,
            "building": 4
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 1,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
              "module": "./src/core/register/index.js",
              "moduleName": "./src/core/register/index.js",
              "type": "cjs require",
              "userRequest": "./registered",
              "loc": "2:19-42"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// TODO: track registered extensions better, at least via setter/remover/matcher\nconst registered = []\n\nmodule.exports = registered\n"
        },
        {
          "id": 9,
          "identifier": "/Users/billymoon/projects/fiona/src/core/prng/xor.js",
          "name": "./src/core/prng/xor.js",
          "index": 8,
          "index2": 4,
          "size": 717,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "issuerId": 2,
          "issuerName": "./src/core/prng/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            },
            {
              "id": 2,
              "identifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
              "name": "./src/core/prng/index.js",
              "profile": {
                "factory": 23,
                "building": 6,
                "dependencies": 13
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
              "module": "./src/core/prng/index.js",
              "moduleName": "./src/core/prng/index.js",
              "type": "cjs require",
              "userRequest": "./xor",
              "loc": "2:12-28"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// xorshift128 variation of https://en.wikipedia.org/wiki/Xorshift\n\nconst baseSeeds = [123456789, 362436069, 521288629, 88675123]\n\nconst xor = seed => {\n  let [x, y, z, w] = baseSeeds\n\n  const random = () => {\n    const t = x ^ (x << 11);\n    [x, y, z] = [y, z, w]\n    w = w ^ (w >> 19) ^ (t ^ (t >> 8))\n    return w / 0x7FFFFFFF\n  }\n\n  const seeder = () => Math.round(random() * 1e16)\n\n  const setSeeds = seed => {\n    [x, y, z, w] = baseSeeds.map(i => i + seed);\n    [x, y, z, w] = [seeder(), seeder(), seeder(), seeder()]\n  }\n\n  setSeeds(seed)\n\n  return {\n    random: () => random(),\n    reseed: setSeeds,\n    getState: () => [x, y, z, w],\n    setState: seeds => ([x, y, z, w] = seeds)\n  }\n}\n\nmodule.exports = xor\n"
        },
        {
          "id": 10,
          "identifier": "/Users/billymoon/projects/fiona/src/core/process-seed/index.js",
          "name": "./src/core/process-seed/index.js",
          "index": 9,
          "index2": 5,
          "size": 506,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "issuerId": 2,
          "issuerName": "./src/core/prng/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            },
            {
              "id": 2,
              "identifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
              "name": "./src/core/prng/index.js",
              "profile": {
                "factory": 23,
                "building": 6,
                "dependencies": 13
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
              "module": "./src/core/prng/index.js",
              "moduleName": "./src/core/prng/index.js",
              "type": "cjs require",
              "userRequest": "../process-seed",
              "loc": "3:20-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "const processSeed = inputSeed => {\n  if (typeof inputSeed === 'string') {\n    // https://github.com/chancejs/chancejs/blob/b1b61100383bc9bfd27907c239e2f1437010e44e/chance.js#L40\n    let seed = 0\n    for (let i = 0; i < inputSeed.length; i++) {\n      let hash = 0\n      for (let j = 0; j < inputSeed.length; j++) {\n        hash = inputSeed.charCodeAt(j) + (hash << 6) + (hash << 16) - hash\n      }\n      seed += hash\n    }\n    return seed\n  } else {\n    return inputSeed\n  }\n}\n\nmodule.exports = processSeed\n"
        },
        {
          "id": 11,
          "identifier": "/Users/billymoon/projects/fiona/src/core/distribution/index.js",
          "name": "./src/core/distribution/index.js",
          "index": 10,
          "index2": 6,
          "size": 664,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "issuerId": 2,
          "issuerName": "./src/core/prng/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            },
            {
              "id": 2,
              "identifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
              "name": "./src/core/prng/index.js",
              "profile": {
                "factory": 23,
                "building": 6,
                "dependencies": 13
              }
            }
          ],
          "profile": {
            "factory": 15,
            "building": 3
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 2,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
              "module": "./src/core/prng/index.js",
              "moduleName": "./src/core/prng/index.js",
              "type": "cjs require",
              "userRequest": "../distribution",
              "loc": "4:21-47"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 4,
          "source": "// define default distribution method as passthrough\nconst defaultDistribution = i => i\n\nmodule.exports = seeded => {\n  // define initial distribution to be default distribution\n  let distribution = defaultDistribution\n\n  // if passed function, set new distribution method\n  // if passed null, reset distribution method to default passthrough\n  // else call distribution function with passed argument\n  return newVal => {\n    if (typeof newVal === 'function') {\n      distribution = newVal\n      return seeded\n    } else if (newVal === null) {\n      distribution = defaultDistribution\n      return seeded\n    } else {\n      return distribution(newVal)\n    }\n  }\n}\n"
        },
        {
          "id": 12,
          "identifier": "/Users/billymoon/projects/fiona/src/core/moon/index.js",
          "name": "./src/core/moon/index.js",
          "index": 11,
          "index2": 8,
          "size": 680,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "./moon",
              "loc": "4:13-30"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// TODO: should Moon be renamed to something more intuitive like FionaConstructor?\n// define main constructor function\nfunction Moon (seedin, Prng) {\n  const seeded = this\n\n  // set initial seed from constructor function initialisation argument, or random integer\n  const initseed = seedin !== undefined ? seedin : Math.floor(Math.random() * 1e8)\n\n  // initialise PRNG\n  const { state, reset, random, distribution } = Prng(seeded, initseed)\n  Object.assign(seeded, { state, reset, random, distribution })\n\n  seeded.info = () => ({ initseed })\n\n  return seeded\n}\n\n// set up self referencial prototype chain á la jQuery\nMoon.prototype = { constructor: Moon }\n\nmodule.exports = Moon\n"
        },
        {
          "id": 13,
          "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/number/number.js",
          "name": "./src/core/primitives/number/number.js",
          "index": 12,
          "index2": 9,
          "size": 235,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "./primitives/number/number",
              "loc": "5:15-52"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "const number = (seeded, { max = 1e6, min = 0, precision = 0 } = {}) => {\n  const multiplier = Math.pow(10, precision)\n  return Math.floor(((seeded.random() * (1 + max - min)) + min) * multiplier) / multiplier\n}\n\nmodule.exports = number"
        },
        {
          "id": 14,
          "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
          "name": "./src/core/primitives/object/object.js",
          "index": 13,
          "index2": 12,
          "size": 581,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "./primitives/object/object",
              "loc": "6:15-52"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "const recurseData = require('../../recurse')\n\nconst object = (seeded, ...originals) => {\n  return originals.reduce((memo, original) => {\n    return recurseData(seeded, original, undefined, undefined, memo)\n    // TODO: re-instate error checking for object\n    // const result = recurseData(seeded, original, undefined, undefined, memo)\n    // if (!(typeof result === 'object' && result.constructor === Object)) {\n    //   throw Error('arguments of fiona.Object must be an Object or function that returns an Object')\n    // }\n    // return result\n  }, {})\n}\nmodule.exports = object\n"
        },
        {
          "id": 15,
          "identifier": "/Users/billymoon/projects/fiona/src/core/recurse/arguments.js",
          "name": "./src/core/recurse/arguments.js",
          "index": 15,
          "index2": 10,
          "size": 232,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
          "issuerId": 0,
          "issuerName": "./src/core/recurse/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            },
            {
              "id": 14,
              "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
              "name": "./src/core/primitives/object/object.js",
              "profile": {
                "factory": 23,
                "building": 6,
                "dependencies": 13
              }
            },
            {
              "id": 0,
              "identifier": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
              "name": "./src/core/recurse/index.js",
              "profile": {
                "factory": 16,
                "building": 7,
                "dependencies": 1
              }
            }
          ],
          "profile": {
            "factory": 4,
            "building": 1,
            "dependencies": 1
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
              "module": "./src/core/recurse/index.js",
              "moduleName": "./src/core/recurse/index.js",
              "type": "cjs require",
              "userRequest": "./arguments",
              "loc": "1:25-47"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 5,
          "source": "const Prng = require('../prng')\n\n// new seeded.constructor =~ new Moon =~ fiona\nconst RecurseArguments = (seeded, position) => new seeded.constructor(`${position}/${seeded.info().initseed}`, Prng)\n\nmodule.exports = RecurseArguments\n"
        },
        {
          "id": 16,
          "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/json/json.js",
          "name": "./src/core/primitives/json/json.js",
          "index": 16,
          "index2": 13,
          "size": 211,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "./primitives/json/json",
              "loc": "7:13-46"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "const json = (seeded, ...input) => {\n  // TODO: is it crazy to dock type the last two arguments of fiona.Json and pass to JSON.stringify?\n  return JSON.stringify(seeded.object(...input))\n}\n\nmodule.exports = json"
        },
        {
          "id": 17,
          "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/array/array.js",
          "name": "./src/core/primitives/array/array.js",
          "index": 17,
          "index2": 14,
          "size": 512,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "./primitives/array/array",
              "loc": "8:14-49"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "const recurseData = require('../../recurse')\n\nconst array = (seeded, qty, input, processor = i => i) => {\n  // TODO: I think the processor pattern is used a couple of times, can it be generalised?\n  const myProcessor = typeof processor === 'string' ? i => i.join(processor) : processor\n  const quantity = typeof qty === 'object' && qty.constructor === Object ? seeded.number(qty) : recurseData(seeded.clone(), qty)\n  return myProcessor(recurseData(seeded, Array(quantity).fill(input)))\n}\n\nmodule.exports = array\n"
        },
        {
          "id": 18,
          "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/string/string.js",
          "name": "./src/core/primitives/string/string.js",
          "index": 18,
          "index2": 15,
          "size": 344,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            0
          ],
          "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
          "issuerId": 5,
          "issuerName": "./src/core/index.js",
          "issuerPath": [
            {
              "id": 3,
              "identifier": "multi ./core/index.js",
              "name": "multi ./core/index.js",
              "profile": {
                "factory": 0,
                "building": 3
              }
            },
            {
              "id": 4,
              "identifier": "/Users/billymoon/projects/fiona/core/index.js",
              "name": "./core/index.js",
              "profile": {
                "factory": 27,
                "building": 9
              }
            },
            {
              "id": 5,
              "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "name": "./src/core/index.js",
              "profile": {
                "factory": 5,
                "building": 5
              }
            }
          ],
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          },
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 5,
              "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
              "module": "./src/core/index.js",
              "moduleName": "./src/core/index.js",
              "type": "cjs require",
              "userRequest": "./primitives/string/string",
              "loc": "9:15-52"
            }
          ],
          "usedExports": true,
          "providedExports": null,
          "optimizationBailout": [
            "ModuleConcatenation bailout: Module is not an ECMAScript module"
          ],
          "depth": 3,
          "source": "// TODO: document fiona.String\nconst recurseData = require('../../recurse')\n\n// TODO: can injected values be same as result of fiona.Array?\nconst string = (seeded, [a, ...b], ...c) => {\n  const reduced = b.reduce((memo, item, index) => memo.concat(c[index], item), [a])\n  return recurseData(seeded, reduced).join('')\n}\n\nmodule.exports = string\n"
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "module": "",
          "moduleIdentifier": "",
          "moduleName": "",
          "loc": "main",
          "request": null,
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
      "name": "./src/core/recurse/index.js",
      "index": 14,
      "index2": 11,
      "size": 1976,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
      "issuerId": 14,
      "issuerName": "./src/core/primitives/object/object.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        },
        {
          "id": 14,
          "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
          "name": "./src/core/primitives/object/object.js",
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          }
        }
      ],
      "profile": {
        "factory": 16,
        "building": 7,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 14,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
          "module": "./src/core/primitives/object/object.js",
          "moduleName": "./src/core/primitives/object/object.js",
          "type": "cjs require",
          "userRequest": "../../recurse",
          "loc": "1:20-44"
        },
        {
          "moduleId": 17,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/primitives/array/array.js",
          "module": "./src/core/primitives/array/array.js",
          "moduleName": "./src/core/primitives/array/array.js",
          "type": "cjs require",
          "userRequest": "../../recurse",
          "loc": "1:20-44"
        },
        {
          "moduleId": 18,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/primitives/string/string.js",
          "module": "./src/core/primitives/string/string.js",
          "moduleName": "./src/core/primitives/string/string.js",
          "type": "cjs require",
          "userRequest": "../../recurse",
          "loc": "2:20-44"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "const RecurseArguments = require('./arguments')\nconst { Register, registered } = require('../register')\n\n// TODO: can the recursor be simplified, or at least variables names made more clear?\nconst recurseObject = (seeded, original, position, current) => {\n  Object.keys(current).forEach(key => {\n    const nextPosition = `${position}.${key}`\n    current[key] = recurseData(seeded, original, nextPosition, current[key])\n  })\n  return current\n}\n\nconst recurseArray = (seeded, original, position, current) => {\n  return current.map((item, index) => {\n    const nextPosition = `${position}[${index}]`\n    return item === undefined ? undefined : recurseData(seeded, original, nextPosition, item, index)\n  })\n}\n\nconst recurseFunction = (seeded, original, position, current) => {\n  const recurseSeeded = RecurseArguments(seeded, position)\n  // TODO: if we are adding data property, why not also position property?\n  // TODO: perhaps data (property on seeded instance during recursion) should be called root, and be a getter/setter and cleaned up after recursion?\n  recurseSeeded.data = original\n  const argOrNo = registered.indexOf(current) !== -1 ? undefined : recurseSeeded\n  return recurseData(seeded, original, position, current(argOrNo))\n}\n\nconst recurseData = (seeded, original, position = 'root', current) => {\n  if (current === undefined && position === 'root') {\n    current = original\n  }\n\n  if (typeof current === 'object' && current.constructor === Object) {\n    return recurseObject(seeded, original, position, current)\n  } else if (typeof current === 'object' && current.constructor === Array) {\n    return recurseArray(seeded, original, position, current)\n  } else if (typeof current === 'function') {\n    return recurseFunction(seeded, original, position, current)\n  } else if (typeof current === 'object' && current.constructor === RegExp) {\n    return seeded.regex ? seeded.regex(current) : current\n  } else {\n    return current\n  }\n}\n\nmodule.exports = recurseData\n"
    },
    {
      "id": 1,
      "identifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
      "name": "./src/core/register/index.js",
      "index": 4,
      "index2": 3,
      "size": 128,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
          "module": "./src/core/recurse/index.js",
          "moduleName": "./src/core/recurse/index.js",
          "type": "cjs require",
          "userRequest": "../register",
          "loc": "2:33-55"
        },
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "./register",
          "loc": "2:33-54"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "const Register = require('./register')\nconst registered = require('./registered')\n\nmodule.exports = {\n  Register,\n  registered\n}"
    },
    {
      "id": 2,
      "identifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
      "name": "./src/core/prng/index.js",
      "index": 7,
      "index2": 7,
      "size": 1441,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "./prng",
          "loc": "3:13-30"
        },
        {
          "moduleId": 15,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/recurse/arguments.js",
          "module": "./src/core/recurse/arguments.js",
          "moduleName": "./src/core/recurse/arguments.js",
          "type": "cjs require",
          "userRequest": "../prng",
          "loc": "1:13-31"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// TODO: add a Mersenne Twister for comparison, and benchmark \nconst xor = require('./xor')\nconst processSeed = require('../process-seed')\nconst Distribution = require('../distribution')\n\n// TODO: add specific tests for prng wrapper\nmodule.exports = (seeded, initseed) => {\n  // initialise prng functions\n  const { reseed, getState, setState, random: prngRandom } = xor(0)\n\n  // seed prng with initial seed\n  reseed(processSeed(initseed))\n\n  // capture initial prng state\n  const initialState = getState()\n\n  // TODO: should be normalized to serialised string for portability?\n  // define prng state getter/setter method\n  const state = newVal => {\n    // if called with no arguments, return state\n    // else if called with null, reset state and return seeded instance\n    // else if called with value, set state to value and return seeded instance\n    if (newVal === undefined) {\n      return getState()\n    } else {\n      if (newVal === null) {\n        setState(initialState)\n      } else {\n        setState(newVal)\n      }\n      return seeded\n    }\n  }\n\n  const distribution = Distribution(seeded)\n\n  // define prng reset method\n  const reset = seed => {\n    reseed(processSeed(seed !== undefined ? seed : initseed))\n    return seeded\n  }\n\n  // define random method based on distribution weighted prng random function\n  const random = () => distribution(prngRandom())\n\n  return {\n    state,\n    reset,\n    random,\n    distribution\n  }\n}\n"
    },
    {
      "id": 3,
      "identifier": "multi ./core/index.js",
      "name": "multi ./core/index.js",
      "index": 0,
      "index2": 18,
      "size": 28,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "issuerPath": null,
      "profile": {
        "factory": 0,
        "building": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": null,
          "moduleIdentifier": null,
          "module": null,
          "moduleName": null,
          "type": "multi entry"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 0
    },
    {
      "id": 4,
      "identifier": "/Users/billymoon/projects/fiona/core/index.js",
      "name": "./core/index.js",
      "index": 1,
      "index2": 17,
      "size": 40,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "multi ./core/index.js",
      "issuerId": 3,
      "issuerName": "multi ./core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        }
      ],
      "profile": {
        "factory": 27,
        "building": 9
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 3,
          "moduleIdentifier": "multi ./core/index.js",
          "module": "multi ./core/index.js",
          "moduleName": "multi ./core/index.js",
          "type": "single entry",
          "userRequest": "./core/index.js",
          "loc": "main[0]"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 1,
      "source": "module.exports = require('../src/core')\n"
    },
    {
      "id": 5,
      "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
      "name": "./src/core/index.js",
      "index": 2,
      "index2": 16,
      "size": 1696,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/core/index.js",
      "issuerId": 4,
      "issuerName": "./core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        }
      ],
      "profile": {
        "factory": 5,
        "building": 5
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 4,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/core/index.js",
          "module": "./core/index.js",
          "moduleName": "./core/index.js",
          "type": "cjs require",
          "userRequest": "../src/core",
          "loc": "1:17-39"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 2,
      "source": "const packageJson = require('../../package')\nconst { Register, registered } = require('./register')\nconst Prng = require('./prng')\nconst Moon = require('./moon')\nconst number = require('./primitives/number/number')\nconst object = require('./primitives/object/object')\nconst json = require('./primitives/json/json')\nconst array = require('./primitives/array/array')\nconst string = require('./primitives/string/string')\n\nconst fiona = seed => new Moon(seed, Prng)\n\nfiona.version = packageJson.version\n\n// TODO: would it be simpler to pull the Register factory into core index?\nconst registerFactory = (name, fn) => {\n  const fnProxy = (...args) => fn(...args)\n  // TODO: handle duplicate extension registrations\n  registered.push(fnProxy)\n  return (fiona[name] = fnProxy)\n}\n\nconst registerMethod = (name, fn) => {\n  return (Moon.prototype[name] = fn)\n}\n\n// TODO: should it be possible to register extensions local to seeded instance?\n// perhaps something like:\n//     const personExtension = seeded => ({\n//       gender: fiona.Gender,\n//       name: ({ data }) => seeded.fullname({ gender: data.gender })\n//     })\n//     fiona().register(['person', personExtension]).object(() => fiona.Person, { luckyNumber: fiona.Number({ max: 100 }) })\nfiona.register = Register(registerFactory, registerMethod)\n\n// TODO: register Random on seeded instance, perhaps need to implement seeded.register first\nfiona.Random = () => seeded => seeded.random()\n\nconst clone = seeded => fiona(seeded.info().initseed).state(seeded.state())\n\nfiona.register(['clone', clone])\n\nfiona.register(\n  ['number', number],\n  ['object', object],\n  ['json', json],\n  ['string', string],\n  ['array', array]\n)\n\nmodule.exports = fiona\n"
    },
    {
      "id": 6,
      "identifier": "/Users/billymoon/projects/fiona/package.json",
      "name": "./package.json",
      "index": 3,
      "index2": 0,
      "size": 1821,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "../../package",
          "loc": "1:20-44"
        }
      ],
      "usedExports": true,
      "providedExports": [
        "name",
        "version",
        "description",
        "repository",
        "main",
        "scripts",
        "author",
        "license",
        "devDependencies",
        "jest",
        "dependencies",
        "size-limit",
        "default"
      ],
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "{\n  \"name\": \"fiona\",\n  \"version\": \"2.7.0\",\n  \"description\": \"tiny yet powerful pseudo random data generator\",\n  \"repository\": \"billymoon/fiona\",\n  \"main\": \"fiona.min.js\",\n  \"scripts\": {\n    \"start\": \"next start\",\n    \"dev\": \"next dev\",\n    \"test\": \"jest\",\n    \"size-limit\": \"size-limit\",\n    \"build\": \"taskr build\",\n    \"deploy\": \"taskr deploy\",\n    \"fix\": \"taskr fix\",\n    \"git-pre-commit\": \"taskr precommit\",\n    \"git-post-commit\": \"taskr postcommit\",\n    \"git-post-merge\": \"taskr postcommit\"\n  },\n  \"author\": \"Billy Moon\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"@taskr/clear\": \"^1.1.0\",\n    \"@taskr/esnext\": \"^1.1.0\",\n    \"@weco/next-plugin-transpile-modules\": \"0.0.2\",\n    \"@zeit/git-hooks\": \"^0.1.4\",\n    \"bezier-easing\": \"^2.0.3\",\n    \"fetch-pretender\": \"^1.5.0\",\n    \"git-tools\": \"^0.3.0\",\n    \"jest\": \"^22.4.4\",\n    \"jsx-components\": \"1.2.0\",\n    \"lodash.template\": \"^4.4.0\",\n    \"next\": \"^6.1.1\",\n    \"randexp\": \"^0.4.6\",\n    \"react\": \"^16.4.1\",\n    \"react-dom\": \"^16.0.0\",\n    \"react-redux\": \"^5.1.0\",\n    \"redux\": \"^4.0.1\",\n    \"size-limit\": \"^0.21.0\",\n    \"standard\": \"^11.0.1\",\n    \"taskr\": \"^1.1.0\",\n    \"webpack\": \"^4.25.1\",\n    \"webpack-bundle-analyzer\": \"^3.0.3\",\n    \"webpack-cli\": \"^3.1.2\"\n  },\n  \"jest\": {\n    \"testURL\": \"http://localhost/\",\n    \"collectCoverageFrom\": [\n      \"src/**/*.js\",\n      \"!src/**/*.docs.js\",\n      \"!src/docs/**\"\n    ],\n    \"testPathIgnorePatterns\": [\n      \"node_modules\",\n      \"misc\"\n    ]\n  },\n  \"dependencies\": {\n    \"react-highlight\": \"^0.12.0\"\n  },\n  \"size-limit\": [\n    {\n      \"config\": \"webpack.config.core.js\",\n      \"limit\": \"5 KB\"\n    },\n    {\n      \"config\": \"webpack.config.js\",\n      \"limit\": \"20 KB\"\n    },\n    {\n      \"path\": \"fiona.min.js\",\n      \"limit\": \"10 KB\"\n    },\n    {\n      \"path\": \"fiona.core.min.js\",\n      \"limit\": \"2 KB\"\n    }\n  ]\n}\n"
    },
    {
      "id": 7,
      "identifier": "/Users/billymoon/projects/fiona/src/core/register/register.js",
      "name": "./src/core/register/register.js",
      "index": 5,
      "index2": 1,
      "size": 392,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/register/index.js",
      "issuerId": 1,
      "issuerName": "./src/core/register/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        },
        {
          "id": 1,
          "identifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
          "name": "./src/core/register/index.js",
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          }
        }
      ],
      "profile": {
        "factory": 8,
        "building": 4
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
          "module": "./src/core/register/index.js",
          "moduleName": "./src/core/register/index.js",
          "type": "cjs require",
          "userRequest": "./register",
          "loc": "1:17-38"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "const Register = (registerFactory, registerMethod) => (...extensions) => extensions.forEach(plugin => {\n  const [name, fn] = typeof plugin === 'function' ? [plugin.name, plugin] : plugin\n\n  registerFactory(name[0].toUpperCase() + name.slice(1), (...args) => seeded => fn(seeded, ...args))\n\n  registerMethod(name, function (...args) { return fn(this, ...args) })\n})\n\nmodule.exports = Register\n"
    },
    {
      "id": 8,
      "identifier": "/Users/billymoon/projects/fiona/src/core/register/registered.js",
      "name": "./src/core/register/registered.js",
      "index": 6,
      "index2": 2,
      "size": 132,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/register/index.js",
      "issuerId": 1,
      "issuerName": "./src/core/register/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        },
        {
          "id": 1,
          "identifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
          "name": "./src/core/register/index.js",
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          }
        }
      ],
      "profile": {
        "factory": 8,
        "building": 4
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 1,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/register/index.js",
          "module": "./src/core/register/index.js",
          "moduleName": "./src/core/register/index.js",
          "type": "cjs require",
          "userRequest": "./registered",
          "loc": "2:19-42"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// TODO: track registered extensions better, at least via setter/remover/matcher\nconst registered = []\n\nmodule.exports = registered\n"
    },
    {
      "id": 9,
      "identifier": "/Users/billymoon/projects/fiona/src/core/prng/xor.js",
      "name": "./src/core/prng/xor.js",
      "index": 8,
      "index2": 4,
      "size": 717,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
      "issuerId": 2,
      "issuerName": "./src/core/prng/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        },
        {
          "id": 2,
          "identifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "name": "./src/core/prng/index.js",
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "module": "./src/core/prng/index.js",
          "moduleName": "./src/core/prng/index.js",
          "type": "cjs require",
          "userRequest": "./xor",
          "loc": "2:12-28"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// xorshift128 variation of https://en.wikipedia.org/wiki/Xorshift\n\nconst baseSeeds = [123456789, 362436069, 521288629, 88675123]\n\nconst xor = seed => {\n  let [x, y, z, w] = baseSeeds\n\n  const random = () => {\n    const t = x ^ (x << 11);\n    [x, y, z] = [y, z, w]\n    w = w ^ (w >> 19) ^ (t ^ (t >> 8))\n    return w / 0x7FFFFFFF\n  }\n\n  const seeder = () => Math.round(random() * 1e16)\n\n  const setSeeds = seed => {\n    [x, y, z, w] = baseSeeds.map(i => i + seed);\n    [x, y, z, w] = [seeder(), seeder(), seeder(), seeder()]\n  }\n\n  setSeeds(seed)\n\n  return {\n    random: () => random(),\n    reseed: setSeeds,\n    getState: () => [x, y, z, w],\n    setState: seeds => ([x, y, z, w] = seeds)\n  }\n}\n\nmodule.exports = xor\n"
    },
    {
      "id": 10,
      "identifier": "/Users/billymoon/projects/fiona/src/core/process-seed/index.js",
      "name": "./src/core/process-seed/index.js",
      "index": 9,
      "index2": 5,
      "size": 506,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
      "issuerId": 2,
      "issuerName": "./src/core/prng/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        },
        {
          "id": 2,
          "identifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "name": "./src/core/prng/index.js",
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "module": "./src/core/prng/index.js",
          "moduleName": "./src/core/prng/index.js",
          "type": "cjs require",
          "userRequest": "../process-seed",
          "loc": "3:20-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "const processSeed = inputSeed => {\n  if (typeof inputSeed === 'string') {\n    // https://github.com/chancejs/chancejs/blob/b1b61100383bc9bfd27907c239e2f1437010e44e/chance.js#L40\n    let seed = 0\n    for (let i = 0; i < inputSeed.length; i++) {\n      let hash = 0\n      for (let j = 0; j < inputSeed.length; j++) {\n        hash = inputSeed.charCodeAt(j) + (hash << 6) + (hash << 16) - hash\n      }\n      seed += hash\n    }\n    return seed\n  } else {\n    return inputSeed\n  }\n}\n\nmodule.exports = processSeed\n"
    },
    {
      "id": 11,
      "identifier": "/Users/billymoon/projects/fiona/src/core/distribution/index.js",
      "name": "./src/core/distribution/index.js",
      "index": 10,
      "index2": 6,
      "size": 664,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
      "issuerId": 2,
      "issuerName": "./src/core/prng/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        },
        {
          "id": 2,
          "identifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "name": "./src/core/prng/index.js",
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          }
        }
      ],
      "profile": {
        "factory": 15,
        "building": 3
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 2,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/prng/index.js",
          "module": "./src/core/prng/index.js",
          "moduleName": "./src/core/prng/index.js",
          "type": "cjs require",
          "userRequest": "../distribution",
          "loc": "4:21-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 4,
      "source": "// define default distribution method as passthrough\nconst defaultDistribution = i => i\n\nmodule.exports = seeded => {\n  // define initial distribution to be default distribution\n  let distribution = defaultDistribution\n\n  // if passed function, set new distribution method\n  // if passed null, reset distribution method to default passthrough\n  // else call distribution function with passed argument\n  return newVal => {\n    if (typeof newVal === 'function') {\n      distribution = newVal\n      return seeded\n    } else if (newVal === null) {\n      distribution = defaultDistribution\n      return seeded\n    } else {\n      return distribution(newVal)\n    }\n  }\n}\n"
    },
    {
      "id": 12,
      "identifier": "/Users/billymoon/projects/fiona/src/core/moon/index.js",
      "name": "./src/core/moon/index.js",
      "index": 11,
      "index2": 8,
      "size": 680,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "./moon",
          "loc": "4:13-30"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// TODO: should Moon be renamed to something more intuitive like FionaConstructor?\n// define main constructor function\nfunction Moon (seedin, Prng) {\n  const seeded = this\n\n  // set initial seed from constructor function initialisation argument, or random integer\n  const initseed = seedin !== undefined ? seedin : Math.floor(Math.random() * 1e8)\n\n  // initialise PRNG\n  const { state, reset, random, distribution } = Prng(seeded, initseed)\n  Object.assign(seeded, { state, reset, random, distribution })\n\n  seeded.info = () => ({ initseed })\n\n  return seeded\n}\n\n// set up self referencial prototype chain á la jQuery\nMoon.prototype = { constructor: Moon }\n\nmodule.exports = Moon\n"
    },
    {
      "id": 13,
      "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/number/number.js",
      "name": "./src/core/primitives/number/number.js",
      "index": 12,
      "index2": 9,
      "size": 235,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "./primitives/number/number",
          "loc": "5:15-52"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "const number = (seeded, { max = 1e6, min = 0, precision = 0 } = {}) => {\n  const multiplier = Math.pow(10, precision)\n  return Math.floor(((seeded.random() * (1 + max - min)) + min) * multiplier) / multiplier\n}\n\nmodule.exports = number"
    },
    {
      "id": 14,
      "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
      "name": "./src/core/primitives/object/object.js",
      "index": 13,
      "index2": 12,
      "size": 581,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "./primitives/object/object",
          "loc": "6:15-52"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "const recurseData = require('../../recurse')\n\nconst object = (seeded, ...originals) => {\n  return originals.reduce((memo, original) => {\n    return recurseData(seeded, original, undefined, undefined, memo)\n    // TODO: re-instate error checking for object\n    // const result = recurseData(seeded, original, undefined, undefined, memo)\n    // if (!(typeof result === 'object' && result.constructor === Object)) {\n    //   throw Error('arguments of fiona.Object must be an Object or function that returns an Object')\n    // }\n    // return result\n  }, {})\n}\nmodule.exports = object\n"
    },
    {
      "id": 15,
      "identifier": "/Users/billymoon/projects/fiona/src/core/recurse/arguments.js",
      "name": "./src/core/recurse/arguments.js",
      "index": 15,
      "index2": 10,
      "size": 232,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
      "issuerId": 0,
      "issuerName": "./src/core/recurse/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        },
        {
          "id": 14,
          "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/object/object.js",
          "name": "./src/core/primitives/object/object.js",
          "profile": {
            "factory": 23,
            "building": 6,
            "dependencies": 13
          }
        },
        {
          "id": 0,
          "identifier": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
          "name": "./src/core/recurse/index.js",
          "profile": {
            "factory": 16,
            "building": 7,
            "dependencies": 1
          }
        }
      ],
      "profile": {
        "factory": 4,
        "building": 1,
        "dependencies": 1
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/recurse/index.js",
          "module": "./src/core/recurse/index.js",
          "moduleName": "./src/core/recurse/index.js",
          "type": "cjs require",
          "userRequest": "./arguments",
          "loc": "1:25-47"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 5,
      "source": "const Prng = require('../prng')\n\n// new seeded.constructor =~ new Moon =~ fiona\nconst RecurseArguments = (seeded, position) => new seeded.constructor(`${position}/${seeded.info().initseed}`, Prng)\n\nmodule.exports = RecurseArguments\n"
    },
    {
      "id": 16,
      "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/json/json.js",
      "name": "./src/core/primitives/json/json.js",
      "index": 16,
      "index2": 13,
      "size": 211,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "./primitives/json/json",
          "loc": "7:13-46"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "const json = (seeded, ...input) => {\n  // TODO: is it crazy to dock type the last two arguments of fiona.Json and pass to JSON.stringify?\n  return JSON.stringify(seeded.object(...input))\n}\n\nmodule.exports = json"
    },
    {
      "id": 17,
      "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/array/array.js",
      "name": "./src/core/primitives/array/array.js",
      "index": 17,
      "index2": 14,
      "size": 512,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "./primitives/array/array",
          "loc": "8:14-49"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "const recurseData = require('../../recurse')\n\nconst array = (seeded, qty, input, processor = i => i) => {\n  // TODO: I think the processor pattern is used a couple of times, can it be generalised?\n  const myProcessor = typeof processor === 'string' ? i => i.join(processor) : processor\n  const quantity = typeof qty === 'object' && qty.constructor === Object ? seeded.number(qty) : recurseData(seeded.clone(), qty)\n  return myProcessor(recurseData(seeded, Array(quantity).fill(input)))\n}\n\nmodule.exports = array\n"
    },
    {
      "id": 18,
      "identifier": "/Users/billymoon/projects/fiona/src/core/primitives/string/string.js",
      "name": "./src/core/primitives/string/string.js",
      "index": 18,
      "index2": 15,
      "size": 344,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        0
      ],
      "issuer": "/Users/billymoon/projects/fiona/src/core/index.js",
      "issuerId": 5,
      "issuerName": "./src/core/index.js",
      "issuerPath": [
        {
          "id": 3,
          "identifier": "multi ./core/index.js",
          "name": "multi ./core/index.js",
          "profile": {
            "factory": 0,
            "building": 3
          }
        },
        {
          "id": 4,
          "identifier": "/Users/billymoon/projects/fiona/core/index.js",
          "name": "./core/index.js",
          "profile": {
            "factory": 27,
            "building": 9
          }
        },
        {
          "id": 5,
          "identifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "name": "./src/core/index.js",
          "profile": {
            "factory": 5,
            "building": 5
          }
        }
      ],
      "profile": {
        "factory": 23,
        "building": 6,
        "dependencies": 13
      },
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 5,
          "moduleIdentifier": "/Users/billymoon/projects/fiona/src/core/index.js",
          "module": "./src/core/index.js",
          "moduleName": "./src/core/index.js",
          "type": "cjs require",
          "userRequest": "./primitives/string/string",
          "loc": "9:15-52"
        }
      ],
      "usedExports": true,
      "providedExports": null,
      "optimizationBailout": [
        "ModuleConcatenation bailout: Module is not an ECMAScript module"
      ],
      "depth": 3,
      "source": "// TODO: document fiona.String\nconst recurseData = require('../../recurse')\n\n// TODO: can injected values be same as result of fiona.Array?\nconst string = (seeded, [a, ...b], ...c) => {\n  const reduced = b.reduce((memo, item, index) => memo.concat(c[index], item), [a])\n  return recurseData(seeded, reduced).join('')\n}\n\nmodule.exports = string\n"
    }
  ],
  "filteredModules": 0,
  "children": []
}
